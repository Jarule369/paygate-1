openapi: 3.0.2
info:
  contact:
    url: https://github.com/moov-io/paygate
  description: |
    PayGate is a RESTful API enabling first-party Automated Clearing House ([ACH](https://en.wikipedia.org/wiki/Automated_Clearing_House)) transfers to be created without a deep understanding of a full NACHA file specification. First-party transfers initiate at an Originating Depository Financial Institution (ODFI) and are sent off to other Financial Institutions.

    Tenants are the largest grouping in PayGate and are typically a vendor who is reselling ACH services or a company making ACH payments themselves. A legal entity is linked off a Tenant as the primary Customer used to KYC and in transfers with the Tenant itself.

    An Organization is a grouping within a Tenant which typically represents an entity making ACH transfers. These include clients of an ACH reseller or business accepting payments over ACH. A legal entity is linked off an Organization as the primary Customer used to KYC and in transfers with the Organization itself.

    ![](https://raw.githubusercontent.com/adamdecaf/paygate/tenants-and-orgs/docs/images/tenant-in-paygate.png)
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Paygate API
  version: v1
servers:
- description: Local development
  url: http://localhost:8082
tags:
- description: |
    Tenant objects represent a group of Organizations under one legal entity. Typically this is for a vendor who is reselling ACH services to many companies and assigns an Organization for each of their clients.
    Tenants are created with the admin HTTP server as part of user signup.
  name: Tenants
- description: |
    Organization objects represent an group or large unit that initiates ACH transfers. These are typically businesses or business units who have configurations for their financial institution. The API allows you to create, delete, and update your organizations.
  name: Organizations
- description: |
    Transfer objects create a transaction initiated by an originator to a receiver with a defined flow and fund amount. The API allows you to create or delete a transfers while the status of the transfer is pending.
  name: Transfers
paths:
  /tenants:
    get:
      description: Retrieve all Tenants for the given userID
      operationId: getTenants
      parameters:
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        explode: false
        in: header
        name: X-User-ID
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenants'
          description: List of Tenants for the given userID
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Problem getting Tenants, see error
      summary: Get Tenants
      tags:
      - Tenants
  /tenants/{tenantID}:
    put:
      description: Update information for a Tenant
      operationId: updateTenant
      parameters:
      - description: tenantID to identify which Tenant to update
        example: kj4f9485
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        explode: false
        in: header
        name: X-User-ID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTenant'
        required: true
      responses:
        200:
          description: Created Tenant successfully
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Problem creating Tenant, see error
      summary: Update Tenant
      tags:
      - Tenants
  /organizations:
    get:
      description: Retrieve all Organizations for the given userID
      operationId: getOrganizations
      parameters:
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        explode: false
        in: header
        name: X-User-ID
        required: true
        schema:
          type: string
        style: simple
      - description: tenantID to create this Organization under
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organizations'
          description: List of Organizations for the given userID
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Problem getting Organizatios, see error
      summary: Get Organizations
      tags:
      - Organizations
    post:
      description: Create a new Organization under PayGate
      operationId: createOrganization
      parameters:
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        explode: false
        in: header
        name: X-User-ID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganization'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Created Organization successfully
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Problem creating Organization, see error
      summary: Create Organization
      tags:
      - Organizations
  /organizations/{organizationID}:
    put:
      description: Update metadata for an Organization
      operationId: updateOrganization
      parameters:
      - description: organizationID for the Organization to update
        example: hs4f9470
        explode: false
        in: path
        name: organizationID
        required: true
        schema:
          type: string
        style: simple
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        explode: false
        in: header
        name: X-User-ID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganization'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Created Organization successfully
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Problem creating Organization, see error
      summary: Update Organization
      tags:
      - Organizations
  /transfers:
    get:
      description: List all Transfers created for the given userID.
      operationId: getTransfers
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: The number of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          example: 10
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: Return only Transfers in this TransferStatus
        explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/TransferStatus'
        style: form
      - description: |
          Return Transfers that are scheduled for this date or later in ISO-8601 format YYYY-MM-DD. Can optionally be used with endDate to specify a date range.
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Return Transfers that are scheduled for this date or earlier in ISO-8601 format YYYY-MM-DD. Can optionally be used with startDate to specify a date range.
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Comma separated list of organizationID values to return Transfer
          objects for.
        explode: true
        in: query
        name: organizationIDs
        required: false
        schema:
          example: 0c1d0229,343fa5e2
          type: string
        style: form
      - description: Comma separated list of customerID values to return Transfer
          objects for.
        explode: true
        in: query
        name: customerIDs
        required: false
        schema:
          example: c336f57e,476547a8
          type: string
        style: form
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        explode: false
        in: header
        name: X-User-ID
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfers'
          description: A list of Transfer objects
          headers:
            X-Total-Count:
              description: The total number of Transfers
              explode: false
              schema:
                type: integer
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Problem getting Transfer, see error
      summary: List Transfers
      tags:
      - Transfers
    post:
      description: |
        Create a new transfer between a Source and a Destination. Transfers can only be modified in the pending status.
      operationId: addTransfer
      parameters:
      - description: Idempotent key in the header which expires after 24 hours. These
          strings should contain enough entropy for to not collide with each other
          in your requests.
        example: a4f88150
        explode: false
        in: header
        name: X-Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        explode: false
        in: header
        name: X-User-ID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransfer'
        required: true
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Created
          headers:
            Location:
              description: The location of the new resource
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Problem creating Transfer, see error
      summary: Create Transfer
      tags:
      - Transfers
  /transfers/{transferID}:
    delete:
      description: |
        Remove a transfer for the specified userID. Its status will be updated as transfer is processed.
        It is only possible to delete (recall) a Transfer before it has been released from the financial institution.
      operationId: deleteTransferByID
      parameters:
      - description: transferID to delete
        explode: false
        in: path
        name: transferID
        required: true
        schema:
          type: string
        style: simple
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        explode: false
        in: header
        name: X-User-ID
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          description: Transfer has been deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Problem deleting Transfer, see error
      summary: Delete Transfer
      tags:
      - Transfers
    get:
      description: Get a Transfer object for the supplied userID
      operationId: getTransferByID
      parameters:
      - description: transferID to retrieve
        explode: false
        in: path
        name: transferID
        required: true
        schema:
          example: 33164ac6
          type: string
        style: simple
      - description: The number of items to skip before starting to collect the result
          set
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: The number of items to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          example: 10
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: Optional requestID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Unique userID set by an auth proxy or client to identify and
          isolate objects.
        explode: false
        in: header
        name: X-User-ID
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: A transfer object for the supplied transferID sorted by their
            creation date descending.
        404:
          description: No Transfer with that transferID was found.
      summary: Get Transfer
      tags:
      - Transfers
components:
  schemas:
    UpdateTenant:
      example:
        name: My Company
      properties:
        name:
          description: Legal name for this Tenant
          example: My Company
          type: string
      required:
      - name
    Tenant:
      example:
        primaryCustomer: 11ffa67d
        tenantID: 23cca67d
        name: My Company
      properties:
        tenantID:
          description: tenantID that uniquely identifies this Tenant
          example: 23cca67d
          type: string
        name:
          description: Legal name for this Tenant
          example: My Company
          type: string
        primaryCustomer:
          description: |
            A customerID from the Customers service to use in Transfers with this Tenant. When transferring to or from the Tenant this Customer and Account(s) are used.
            The Customer assigned here should represent the legal entity that manages the Tenant.
          example: 11ffa67d
          type: string
    Tenants:
      items:
        $ref: '#/components/schemas/Tenant'
      type: array
    CreateOrganization:
      example:
        primaryCustomer: 11ffa67d
        name: My Organization
        tenantID: 23cca67d
      properties:
        name:
          description: Legal name for this Organization
          example: My Organization
          type: string
        tenantID:
          description: tenantID to create this Organization under
          example: 23cca67d
          type: string
        primaryCustomer:
          description: |
            A customerID from the Customers service to use in Transfers with this Organization. When transferring to or from the Organization this Customer and Account(s) are used.
            The Customer assigned here should represent the legal entity that manages the Organization.
          example: 11ffa67d
          type: string
      required:
      - name
      - primaryCustomer
      - tenantID
    Organization:
      example:
        organizationID: 45cdb67d
        primaryCustomer: 11ffa67d
        name: My Organization
        tenantID: 23cca67d
      properties:
        organizationID:
          description: Unique identifier for this Organization
          example: 45cdb67d
          type: string
        name:
          description: Legal name for this Organization
          example: My Organization
          type: string
        tenantID:
          description: tenantID this Organization is created under
          example: 23cca67d
          type: string
        primaryCustomer:
          description: |
            A customerID from the Customers service to use in Transfers with this Organization. When transferring to or from the Organization this Customer and Account(s) are used.
            The Customer assigned here should represent the legal entity that manages the Organization.
          example: 11ffa67d
          type: string
    Organizations:
      items:
        $ref: '#/components/schemas/Organization'
      type: array
    Source:
      description: Customer that initiates a Transfer
      example:
        accountID: 68b534b7
        customerID: 11ffa67d
      properties:
        customerID:
          description: A customerID from the Customers service used as the source
            for this Transfer
          example: 11ffa67d
          type: string
        accountID:
          description: A accountID from the Customers service under the specified
            Customer used for this Transfer. If the Customer only has one account
            this value can be left empty.
          example: 68b534b7
          type: string
      required:
      - accountID
      - customerID
    Destination:
      description: Customer that is receiving a Transfer
      example:
        accountID: 68b534b7
        customerID: 11ffa67d
      properties:
        customerID:
          description: A customerID from the Customers service used as source for
            this Transfer
          example: 11ffa67d
          type: string
        accountID:
          description: A accountID from the Customers service under the specified
            Customer used for this Transfer. If the Customer only has one account
            this value can be left empty.
          example: 68b534b7
          type: string
      required:
      - accountID
      - customerID
    CreateTransfer:
      description: |
        These fields are used to initiate a Transfer from an Originator to a Receiver using the two Depository objects.
        CCDDetail, IATDetail, etc are only required according to the Standard Entry Class (SEC) code used.
      example:
        amount: USD 99.99
        sameDay: false
        destination:
          accountID: 68b534b7
          customerID: 11ffa67d
        description: Loan Pay
        source:
          accountID: 68b534b7
          customerID: 11ffa67d
      properties:
        amount:
          description: Amount of money. USD - United States.
          example: USD 99.99
          type: string
        source:
          $ref: '#/components/schemas/Source'
        destination:
          $ref: '#/components/schemas/Destination'
        description:
          description: Brief description of the transaction, that may appear on the
            receiving entity’s financial statement
          example: Loan Pay
          maxLength: 79
          minLength: 1
          type: string
        sameDay:
          default: false
          description: When set to true this indicates the transfer should be processed
            the same day if possible.
          type: boolean
      required:
      - amount
      - description
      - destination
      - source
    TransferStatus:
      description: Defines the state of the Transfer
      enum:
      - canceled
      - failed
      - reviewable
      - pending
      - processed
      type: string
    Transfer:
      example:
        returnCode:
          reason: Account Closed
          code: R02
          description: Previously active account has been closed by customer or RDFI
        amount: USD 99.99
        created: 2000-01-23T04:56:07.000+00:00
        sameDay: false
        destination:
          accountID: 68b534b7
          customerID: 11ffa67d
        description: Loan Pay
        source:
          accountID: 68b534b7
          customerID: 11ffa67d
        transferID: 33164ac6
      properties:
        transferID:
          description: transferID to uniquely identify this Transfer
          example: 33164ac6
          type: string
        amount:
          description: Amount of money. USD - United States.
          example: USD 99.99
          type: string
        source:
          $ref: '#/components/schemas/Source'
        destination:
          $ref: '#/components/schemas/Destination'
        description:
          description: |
            Brief description of the transaction, that may appear on the receiving entity’s financial statement. This field is put into the Entry Detail's DiscretionaryData.
          example: Loan Pay
          maxLength: 79
          minLength: 1
          type: string
        status:
          $ref: '#/components/schemas/TransferStatus'
        sameDay:
          default: false
          description: When set to true this indicates the transfer should be processed
            the same day if possible.
          type: boolean
        returnCode:
          $ref: '#/components/schemas/ReturnCode'
        created:
          format: date-time
          type: string
    Transfers:
      items:
        $ref: '#/components/schemas/Transfer'
      type: array
    ReturnCode:
      example:
        reason: Account Closed
        code: R02
        description: Previously active account has been closed by customer or RDFI
      properties:
        code:
          description: Optional NACHA return code for this Transfer
          example: R02
          type: string
        reason:
          description: Short NACHA description of return code
          example: Account Closed
          type: string
        description:
          description: Long form explanation of return code
          example: Previously active account has been closed by customer or RDFI
          type: string
    Error:
      properties:
        error:
          description: An error message describing the problem intended for humans.
          example: Validation error(s) present.
          type: string
      required:
      - error
